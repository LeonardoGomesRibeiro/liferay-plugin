package com.liferay.mobilephones.model.impl;

import com.liferay.mobilephones.model.MBMobilePhone;
import com.liferay.mobilephones.model.MBMobilePhoneModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MBMobilePhone service. Represents a row in the &quot;MB_MBMobilePhone&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.mobilephones.model.MBMobilePhoneModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MBMobilePhoneImpl}.
 * </p>
 *
 * @author Leonardo Ribeiro
 * @see MBMobilePhoneImpl
 * @see com.liferay.mobilephones.model.MBMobilePhone
 * @see com.liferay.mobilephones.model.MBMobilePhoneModel
 * @generated
 */
public class MBMobilePhoneModelImpl extends BaseModelImpl<MBMobilePhone>
    implements MBMobilePhoneModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a m b mobile phone model instance should use the {@link com.liferay.mobilephones.model.MBMobilePhone} interface instead.
     */
    public static final String TABLE_NAME = "MB_MBMobilePhone";
    public static final Object[][] TABLE_COLUMNS = {
            { "id_", Types.BIGINT },
            { "name", Types.VARCHAR },
            { "brand", Types.VARCHAR },
            { "description", Types.VARCHAR },
            { "releaseDate", Types.TIMESTAMP },
            { "price", Types.DOUBLE }
        };
    public static final String TABLE_SQL_CREATE = "create table MB_MBMobilePhone (id_ LONG not null primary key,name VARCHAR(75) null,brand VARCHAR(75) null,description VARCHAR(75) null,releaseDate DATE null,price DOUBLE)";
    public static final String TABLE_SQL_DROP = "drop table MB_MBMobilePhone";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.liferay.mobilephones.model.MBMobilePhone"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.liferay.mobilephones.model.MBMobilePhone"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.liferay.mobilephones.model.MBMobilePhone"));
    private static ClassLoader _classLoader = MBMobilePhone.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            MBMobilePhone.class
        };
    private long _id;
    private String _name;
    private String _brand;
    private String _description;
    private Date _releaseDate;
    private double _price;
    private MBMobilePhone _escapedModel;

    public MBMobilePhoneModelImpl() {
    }

    public long getPrimaryKey() {
        return _id;
    }

    public void setPrimaryKey(long primaryKey) {
        setId(primaryKey);
    }

    public Serializable getPrimaryKeyObj() {
        return new Long(_id);
    }

    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    public Class<?> getModelClass() {
        return MBMobilePhone.class;
    }

    public String getModelClassName() {
        return MBMobilePhone.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("id", getId());
        attributes.put("name", getName());
        attributes.put("brand", getBrand());
        attributes.put("description", getDescription());
        attributes.put("releaseDate", getReleaseDate());
        attributes.put("price", getPrice());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long id = (Long) attributes.get("id");

        if (id != null) {
            setId(id);
        }

        String name = (String) attributes.get("name");

        if (name != null) {
            setName(name);
        }

        String brand = (String) attributes.get("brand");

        if (brand != null) {
            setBrand(brand);
        }

        String description = (String) attributes.get("description");

        if (description != null) {
            setDescription(description);
        }

        Date releaseDate = (Date) attributes.get("releaseDate");

        if (releaseDate != null) {
            setReleaseDate(releaseDate);
        }

        Double price = (Double) attributes.get("price");

        if (price != null) {
            setPrice(price);
        }
    }

    public long getId() {
        return _id;
    }

    public void setId(long id) {
        _id = id;
    }

    public String getName() {
        if (_name == null) {
            return StringPool.BLANK;
        } else {
            return _name;
        }
    }

    public void setName(String name) {
        _name = name;
    }

    public String getBrand() {
        if (_brand == null) {
            return StringPool.BLANK;
        } else {
            return _brand;
        }
    }

    public void setBrand(String brand) {
        _brand = brand;
    }

    public String getDescription() {
        if (_description == null) {
            return StringPool.BLANK;
        } else {
            return _description;
        }
    }

    public void setDescription(String description) {
        _description = description;
    }

    public Date getReleaseDate() {
        return _releaseDate;
    }

    public void setReleaseDate(Date releaseDate) {
        _releaseDate = releaseDate;
    }

    public double getPrice() {
        return _price;
    }

    public void setPrice(double price) {
        _price = price;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            MBMobilePhone.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public MBMobilePhone toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (MBMobilePhone) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    public MBMobilePhone toUnescapedModel() {
        return (MBMobilePhone) this;
    }

    @Override
    public Object clone() {
        MBMobilePhoneImpl mbMobilePhoneImpl = new MBMobilePhoneImpl();

        mbMobilePhoneImpl.setId(getId());
        mbMobilePhoneImpl.setName(getName());
        mbMobilePhoneImpl.setBrand(getBrand());
        mbMobilePhoneImpl.setDescription(getDescription());
        mbMobilePhoneImpl.setReleaseDate(getReleaseDate());
        mbMobilePhoneImpl.setPrice(getPrice());

        mbMobilePhoneImpl.resetOriginalValues();

        return mbMobilePhoneImpl;
    }

    public int compareTo(MBMobilePhone mbMobilePhone) {
        long primaryKey = mbMobilePhone.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof MBMobilePhone)) {
            return false;
        }

        MBMobilePhone mbMobilePhone = (MBMobilePhone) obj;

        long primaryKey = mbMobilePhone.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<MBMobilePhone> toCacheModel() {
        MBMobilePhoneCacheModel mbMobilePhoneCacheModel = new MBMobilePhoneCacheModel();

        mbMobilePhoneCacheModel.id = getId();

        mbMobilePhoneCacheModel.name = getName();

        String name = mbMobilePhoneCacheModel.name;

        if ((name != null) && (name.length() == 0)) {
            mbMobilePhoneCacheModel.name = null;
        }

        mbMobilePhoneCacheModel.brand = getBrand();

        String brand = mbMobilePhoneCacheModel.brand;

        if ((brand != null) && (brand.length() == 0)) {
            mbMobilePhoneCacheModel.brand = null;
        }

        mbMobilePhoneCacheModel.description = getDescription();

        String description = mbMobilePhoneCacheModel.description;

        if ((description != null) && (description.length() == 0)) {
            mbMobilePhoneCacheModel.description = null;
        }

        Date releaseDate = getReleaseDate();

        if (releaseDate != null) {
            mbMobilePhoneCacheModel.releaseDate = releaseDate.getTime();
        } else {
            mbMobilePhoneCacheModel.releaseDate = Long.MIN_VALUE;
        }

        mbMobilePhoneCacheModel.price = getPrice();

        return mbMobilePhoneCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(13);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", name=");
        sb.append(getName());
        sb.append(", brand=");
        sb.append(getBrand());
        sb.append(", description=");
        sb.append(getDescription());
        sb.append(", releaseDate=");
        sb.append(getReleaseDate());
        sb.append(", price=");
        sb.append(getPrice());
        sb.append("}");

        return sb.toString();
    }

    public String toXmlString() {
        StringBundler sb = new StringBundler(22);

        sb.append("<model><model-name>");
        sb.append("com.liferay.mobilephones.model.MBMobilePhone");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>name</column-name><column-value><![CDATA[");
        sb.append(getName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>brand</column-name><column-value><![CDATA[");
        sb.append(getBrand());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>description</column-name><column-value><![CDATA[");
        sb.append(getDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>releaseDate</column-name><column-value><![CDATA[");
        sb.append(getReleaseDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>price</column-name><column-value><![CDATA[");
        sb.append(getPrice());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
